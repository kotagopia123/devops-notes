# Loop Types - for:
#===================

#!/bin/bash
for i in 1 2 3 4 5
do
  echo "Welcome $i times."
done
-----------------------------------------------------

#!/bin/bash
# A simple shell script to print list of cars
for car in bmw ford toyota nissan
   do
   echo "Value of car is: $car"
done

------------------------------------------------------

#!/bin/bash
# A simple shell script to run commands 
for command in date pwd df 
   do
   echo
   echo "*** The output of $command command >"
   #run command 
   $command
   echo
done

------------------------------------------------------

#!/bin/bash
# The For Loop Using Variable's Contents
# A shell script to verify user password database
files="/etc/passwd /etc/group /etc/shadow /etc/gshdow"
for f in $files
do
	[  -f $f ] && echo "$f file found" || echo "*** Error - $f file missing."
done

------------------------------------------------------

#!/bin/bash
# The For Loop Using Command-line Arguments
# A simple shell script to display a file on screen passed as command line argument
[ $# -eq 0 ] && { echo "Usage: $0 file1 file2 fileN"; exit 1; }

# read all command line arguments via the for loop
for f in $*
   do
   echo
   echo "< $f >"
   [ -f $f ] && cat $f || echo "$f not file."
   echo "------------------------------------------------"
done

--------------------------------------------------------

#!/bin/bash
# Multiplication Table
n=$1
# make sure command line arguments are passed to the script
if [ $# -eq 0 ]
then
	echo "A shell script to print multiplication table."
	echo "Usage : $0 number"
	exit 1
fi

# Use for loop
for i in {1..10}
do
	echo "$n * $i = $(( $i * $n))"
done

--------------------------------------------------------

# Loop Types - while:
#=====================

#!/bin/bash
# set n to 1
n=1

# continue until $n equals 5
while [ $n -le 5 ]
do
	echo "Welcome $n times."
	n=$(( n+1 ))	 # increments $n
done

-------------------------------------------------------

#!/bin/bash
n=1
while (( $n <= 5 ))
do
	echo "Welcome $n times."
	n=$(( n+1 ))	
done

------------------------------------------------------

#!/bin/bash
file=/etc/resolv.conf
while IFS= read -r line
do
        # echo line is stored in $line
	echo $line
done < "$file"

-------------------------------------------------------

#!/bin/bash
file=/etc/resolv.conf
# set field separator to a single white space 
while IFS=' ' read -r f1 f2
do
	echo "field # 1 : $f1 ==> field #2 : $f2"
done < "$file"

-------------------------------------------------------

#!/bin/bash
file=/etc/passwd
# set field delimiter to : 
# read all 7 fields into 7 vars 
while IFS=: read -r user enpass uid gid desc home shell
do
    # only display if UID >= 500 
	[ $uid -ge 500 ] && echo "User $user ($uid) assigned \"$home\" home directory with $shell shell."
done < "$file"

------------------------------------------------------
#!/bin/bash

INDEX=1
while [ $INDEX -lt 6 ]
do
  echo "Creating project-${INDEX}"
  mkdir /tmp/project-${INDEX}
  ((INDEX++)) # INDEX=INDEX+1
done
-----------------------------------------------------
#!/bin/bash

while [ "$CORRECT" != "y" ]
do
  read -p "Enter your name: " NAME
  read -p "Is ${NAME} correct? " CORRECT
done
---------------------------------------------------
#!/bin/bash

while ping -c 1 google.com >/dev/null
do
  echo "Google still up..."
  sleep 5
done

echo "Google down."
---------------------------------------------------

#!/bin/bash

while true
do
  read -p "1: Show disk usage.  2: Show uptime. " CHOICE
  case "$CHOICE" in
    1)
      df -h
      ;;
    2)
      uptime
      ;;
    *) 
      break
      ;;
  esac
done

-----------------------------------------------------------
#!/bin/bash

mysql -BNe 'show databases' | while read DB
do
  db-backed-up-recently $DB
  if [ "$?" -eq "0" ]
  then
    continue
  fi
  backup $DB
done
-------------------------------------------------------
